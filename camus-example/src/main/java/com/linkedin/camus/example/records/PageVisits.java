/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.linkedin.camus.example.records;  
@SuppressWarnings("all")
public class PageVisits extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PageVisits\",\"namespace\":\"com.linkedin.camus.example.records\",\"fields\":[{\"name\":\"time\",\"type\":\"long\",\"default\":0},{\"name\":\"site\",\"type\":\"string\"},{\"name\":\"ip\",\"type\":\"string\"}]}");
  @Deprecated public long time;
  @Deprecated public java.lang.CharSequence site;
  @Deprecated public java.lang.CharSequence ip;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return time;
    case 1: return site;
    case 2: return ip;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: time = (java.lang.Long)value$; break;
    case 1: site = (java.lang.CharSequence)value$; break;
    case 2: ip = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'time' field.
   */
  public java.lang.Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(java.lang.Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'site' field.
   */
  public java.lang.CharSequence getSite() {
    return site;
  }

  /**
   * Sets the value of the 'site' field.
   * @param value the value to set.
   */
  public void setSite(java.lang.CharSequence value) {
    this.site = value;
  }

  /**
   * Gets the value of the 'ip' field.
   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /** Creates a new PageVisits RecordBuilder */
  public static com.linkedin.camus.example.records.PageVisits.Builder newBuilder() {
    return new com.linkedin.camus.example.records.PageVisits.Builder();
  }
  
  /** Creates a new PageVisits RecordBuilder by copying an existing Builder */
  public static com.linkedin.camus.example.records.PageVisits.Builder newBuilder(com.linkedin.camus.example.records.PageVisits.Builder other) {
    return new com.linkedin.camus.example.records.PageVisits.Builder(other);
  }
  
  /** Creates a new PageVisits RecordBuilder by copying an existing PageVisits instance */
  public static com.linkedin.camus.example.records.PageVisits.Builder newBuilder(com.linkedin.camus.example.records.PageVisits other) {
    return new com.linkedin.camus.example.records.PageVisits.Builder(other);
  }
  
  /**
   * RecordBuilder for PageVisits instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PageVisits>
    implements org.apache.avro.data.RecordBuilder<PageVisits> {

    private long time;
    private java.lang.CharSequence site;
    private java.lang.CharSequence ip;

    /** Creates a new Builder */
    private Builder() {
      super(com.linkedin.camus.example.records.PageVisits.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.linkedin.camus.example.records.PageVisits.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing PageVisits instance */
    private Builder(com.linkedin.camus.example.records.PageVisits other) {
            super(com.linkedin.camus.example.records.PageVisits.SCHEMA$);
      if (isValidValue(fields()[0], other.time)) {
        this.time = (java.lang.Long) data().deepCopy(fields()[0].schema(), other.time);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.site)) {
        this.site = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.site);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ip)) {
        this.ip = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.ip);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'time' field */
    public java.lang.Long getTime() {
      return time;
    }
    
    /** Sets the value of the 'time' field */
    public com.linkedin.camus.example.records.PageVisits.Builder setTime(long value) {
      validate(fields()[0], value);
      this.time = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'time' field has been set */
    public boolean hasTime() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'time' field */
    public com.linkedin.camus.example.records.PageVisits.Builder clearTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'site' field */
    public java.lang.CharSequence getSite() {
      return site;
    }
    
    /** Sets the value of the 'site' field */
    public com.linkedin.camus.example.records.PageVisits.Builder setSite(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.site = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'site' field has been set */
    public boolean hasSite() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'site' field */
    public com.linkedin.camus.example.records.PageVisits.Builder clearSite() {
      site = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ip' field */
    public java.lang.CharSequence getIp() {
      return ip;
    }
    
    /** Sets the value of the 'ip' field */
    public com.linkedin.camus.example.records.PageVisits.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ip = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ip' field has been set */
    public boolean hasIp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ip' field */
    public com.linkedin.camus.example.records.PageVisits.Builder clearIp() {
      ip = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public PageVisits build() {
      try {
        PageVisits record = new PageVisits();
        record.time = fieldSetFlags()[0] ? this.time : (java.lang.Long) defaultValue(fields()[0]);
        record.site = fieldSetFlags()[1] ? this.site : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ip = fieldSetFlags()[2] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
